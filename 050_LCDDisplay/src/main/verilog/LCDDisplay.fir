;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:44:42.884, builtAtMillis: 1562607882884
circuit LCDDisplay : 
  module Seg7LED : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip digits : UInt<4>[8], seg7led : {cathodes : UInt<7>, decimalPoint : UInt<1>, anodes : UInt<8>}}
    
    reg value : UInt<17>, clock with : (reset => (reset, UInt<17>("h00"))) @[Counter.scala 26:33]
    when UInt<1>("h01") : @[Counter.scala 63:17]
      node _T_41 = eq(value, UInt<17>("h01869f")) @[Counter.scala 34:24]
      node _T_43 = add(value, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_44 = tail(_T_43, 1) @[Counter.scala 35:22]
      value <= _T_44 @[Counter.scala 35:13]
      when _T_41 : @[Counter.scala 37:21]
        value <= UInt<1>("h00") @[Counter.scala 37:29]
        skip @[Counter.scala 37:21]
      skip @[Counter.scala 63:17]
    node digitChange = and(UInt<1>("h01"), _T_41) @[Counter.scala 64:20]
    reg value_1 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 26:33]
    when digitChange : @[Counter.scala 63:17]
      node _T_49 = eq(value_1, UInt<3>("h07")) @[Counter.scala 34:24]
      node _T_51 = add(value_1, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_52 = tail(_T_51, 1) @[Counter.scala 35:22]
      value_1 <= _T_52 @[Counter.scala 35:13]
      skip @[Counter.scala 63:17]
    node digitWrap = and(digitChange, _T_49) @[Counter.scala 64:20]
    node _T_56 = eq(io.digits[value_1], UInt<1>("h00")) @[Seg7LED.scala 36:17]
    node _T_59 = eq(io.digits[value_1], UInt<1>("h01")) @[Seg7LED.scala 37:17]
    node _T_62 = eq(io.digits[value_1], UInt<2>("h02")) @[Seg7LED.scala 38:17]
    node _T_65 = eq(io.digits[value_1], UInt<2>("h03")) @[Seg7LED.scala 39:17]
    node _T_68 = eq(io.digits[value_1], UInt<3>("h04")) @[Seg7LED.scala 40:17]
    node _T_71 = eq(io.digits[value_1], UInt<3>("h05")) @[Seg7LED.scala 41:17]
    node _T_74 = eq(io.digits[value_1], UInt<3>("h06")) @[Seg7LED.scala 42:17]
    node _T_77 = eq(io.digits[value_1], UInt<3>("h07")) @[Seg7LED.scala 43:17]
    node _T_80 = eq(io.digits[value_1], UInt<4>("h08")) @[Seg7LED.scala 44:17]
    node _T_83 = eq(io.digits[value_1], UInt<4>("h09")) @[Seg7LED.scala 45:17]
    node _T_86 = eq(io.digits[value_1], UInt<4>("h0a")) @[Seg7LED.scala 46:17]
    node _T_89 = eq(io.digits[value_1], UInt<4>("h0b")) @[Seg7LED.scala 47:17]
    node _T_92 = eq(io.digits[value_1], UInt<4>("h0c")) @[Seg7LED.scala 48:17]
    node _T_95 = eq(io.digits[value_1], UInt<4>("h0d")) @[Seg7LED.scala 49:17]
    node _T_98 = eq(io.digits[value_1], UInt<4>("h0e")) @[Seg7LED.scala 50:17]
    node _T_101 = eq(io.digits[value_1], UInt<4>("h0f")) @[Seg7LED.scala 51:17]
    node _T_103 = mux(_T_101, UInt<4>("h0e"), UInt<7>("h07f")) @[Mux.scala 61:16]
    node _T_104 = mux(_T_98, UInt<3>("h06"), _T_103) @[Mux.scala 61:16]
    node _T_105 = mux(_T_95, UInt<6>("h021"), _T_104) @[Mux.scala 61:16]
    node _T_106 = mux(_T_92, UInt<7>("h046"), _T_105) @[Mux.scala 61:16]
    node _T_107 = mux(_T_89, UInt<2>("h03"), _T_106) @[Mux.scala 61:16]
    node _T_108 = mux(_T_86, UInt<4>("h08"), _T_107) @[Mux.scala 61:16]
    node _T_109 = mux(_T_83, UInt<5>("h010"), _T_108) @[Mux.scala 61:16]
    node _T_110 = mux(_T_80, UInt<1>("h00"), _T_109) @[Mux.scala 61:16]
    node _T_111 = mux(_T_77, UInt<7>("h058"), _T_110) @[Mux.scala 61:16]
    node _T_112 = mux(_T_74, UInt<2>("h02"), _T_111) @[Mux.scala 61:16]
    node _T_113 = mux(_T_71, UInt<5>("h012"), _T_112) @[Mux.scala 61:16]
    node _T_114 = mux(_T_68, UInt<5>("h019"), _T_113) @[Mux.scala 61:16]
    node _T_115 = mux(_T_65, UInt<6>("h030"), _T_114) @[Mux.scala 61:16]
    node _T_116 = mux(_T_62, UInt<6>("h024"), _T_115) @[Mux.scala 61:16]
    node _T_117 = mux(_T_59, UInt<7>("h079"), _T_116) @[Mux.scala 61:16]
    node _T_118 = mux(_T_56, UInt<7>("h040"), _T_117) @[Mux.scala 61:16]
    io.seg7led.cathodes <= _T_118 @[Seg7LED.scala 34:23]
    reg anodes : UInt<8>, clock with : (reset => (reset, UInt<8>("h0fe"))) @[Seg7LED.scala 53:23]
    when digitChange : @[Seg7LED.scala 54:22]
      node _T_121 = bits(anodes, 6, 0) @[Seg7LED.scala 56:25]
      node _T_122 = bits(anodes, 7, 7) @[Seg7LED.scala 56:39]
      node _T_123 = cat(_T_121, _T_122) @[Cat.scala 30:58]
      anodes <= _T_123 @[Seg7LED.scala 56:12]
      skip @[Seg7LED.scala 54:22]
    io.seg7led.anodes <= anodes @[Seg7LED.scala 58:21]
    io.seg7led.decimalPoint <= UInt<1>("h01") @[Seg7LED.scala 60:27]
    
  module LCDDisplay : 
    input clock : Clock
    input reset : UInt<1>
    output io : {lcd : {serialClock : UInt<1>, dataCommand : UInt<1>, chipSelect : UInt<1>, masterOutSlaveIn : UInt<1>, flip masterInSlaveOut : UInt<1>, reset : UInt<1>, led : UInt<1>}, flip operation : {command : {valid : UInt<1>, bits : UInt<8>}, exec : UInt<1>, reset : UInt<1>}, seg7LED : {cathodes : UInt<7>, decimalPoint : UInt<1>, anodes : UInt<8>}}
    
    reg serialClock : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[LCDDisplay.scala 33:28]
    reg value : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 26:33]
    when UInt<1>("h01") : @[Counter.scala 63:17]
      node _T_49 = eq(value, UInt<3>("h04")) @[Counter.scala 34:24]
      node _T_51 = add(value, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_52 = tail(_T_51, 1) @[Counter.scala 35:22]
      value <= _T_52 @[Counter.scala 35:13]
      when _T_49 : @[Counter.scala 37:21]
        value <= UInt<1>("h00") @[Counter.scala 37:29]
        skip @[Counter.scala 37:21]
      skip @[Counter.scala 63:17]
    node serialClockNegatePulse = and(UInt<1>("h01"), _T_49) @[Counter.scala 64:20]
    inst seg7LED of Seg7LED @[LCDDisplay.scala 37:23]
    seg7LED.clock <= clock
    seg7LED.reset <= reset
    wire _T_65 : UInt<4>[8] @[LCDDisplay.scala 38:31]
    _T_65[0] <= UInt<4>("h00") @[LCDDisplay.scala 38:31]
    _T_65[1] <= UInt<4>("h00") @[LCDDisplay.scala 38:31]
    _T_65[2] <= UInt<4>("h00") @[LCDDisplay.scala 38:31]
    _T_65[3] <= UInt<4>("h00") @[LCDDisplay.scala 38:31]
    _T_65[4] <= UInt<4>("h00") @[LCDDisplay.scala 38:31]
    _T_65[5] <= UInt<4>("h00") @[LCDDisplay.scala 38:31]
    _T_65[6] <= UInt<4>("h00") @[LCDDisplay.scala 38:31]
    _T_65[7] <= UInt<4>("h00") @[LCDDisplay.scala 38:31]
    seg7LED.io.digits[0] <= _T_65[0] @[LCDDisplay.scala 38:21]
    seg7LED.io.digits[1] <= _T_65[1] @[LCDDisplay.scala 38:21]
    seg7LED.io.digits[2] <= _T_65[2] @[LCDDisplay.scala 38:21]
    seg7LED.io.digits[3] <= _T_65[3] @[LCDDisplay.scala 38:21]
    seg7LED.io.digits[4] <= _T_65[4] @[LCDDisplay.scala 38:21]
    seg7LED.io.digits[5] <= _T_65[5] @[LCDDisplay.scala 38:21]
    seg7LED.io.digits[6] <= _T_65[6] @[LCDDisplay.scala 38:21]
    seg7LED.io.digits[7] <= _T_65[7] @[LCDDisplay.scala 38:21]
    io.seg7LED.anodes <= seg7LED.io.seg7led.anodes @[LCDDisplay.scala 41:14]
    io.seg7LED.decimalPoint <= seg7LED.io.seg7led.decimalPoint @[LCDDisplay.scala 41:14]
    io.seg7LED.cathodes <= seg7LED.io.seg7led.cathodes @[LCDDisplay.scala 41:14]
    io.lcd.chipSelect <= UInt<1>("h00") @[LCDDisplay.scala 44:21]
    io.lcd.serialClock <= UInt<1>("h01") @[LCDDisplay.scala 45:22]
    io.lcd.dataCommand <= UInt<1>("h00") @[LCDDisplay.scala 46:22]
    io.lcd.masterOutSlaveIn <= UInt<1>("h00") @[LCDDisplay.scala 47:27]
    io.lcd.reset <= UInt<1>("h00") @[LCDDisplay.scala 48:16]
    io.lcd.led <= UInt<1>("h01") @[LCDDisplay.scala 49:14]
    
